{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sychevaa/Desktop/Polyhack2020/new_repo_2/SBB_Polyhack/client/src/components/Map/MapboxMap.jsx\";\n//import \"./MapboxMap.css\";\nimport React, { useState } from \"react\";\nimport { MapContainer, Marker, Polyline, Popup, TileLayer, Circle, startDate } from \"react-leaflet\";\nimport { opacityById, weightById, colorById } from \"./stylize_elements.js\";\nimport { MapLine, MapActiveLine } from \"./Line\";\nimport { act } from \"react-dom/test-utils\";\nexport const Map = ({\n  markers,\n  lines,\n  origin,\n  setSite,\n  setSiteInfo,\n  setActiveLine,\n  activeLine,\n  construct\n}) => {\n  const sample_line = [{\n    from_lat: \"47.372406\",\n    from_long: \"8.537606\",\n    id: \"1\",\n    to_lat: \"46.951368\",\n    to_long: \"7.451401\"\n  }, {\n    from_lat: \"47.372406\",\n    from_long: \"8.537606\",\n    id: \"2\",\n    to_lat: \"47.539976\",\n    to_long: \"7.579924\"\n  }];\n  const test_city = {\n    id: \"GE\",\n    lat: \"46.236360\",\n    lon: \"6.139854\",\n    full_name: \"Geneva\",\n    status: \"Lockdown\",\n    details: \"What a pity\"\n  };\n\n  const handleClick = event => {\n    const {\n      lat,\n      lng\n    } = event.latlng;\n    console.log(`Clicked at ${lat}, ${lng}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: origin,\n      zoom: 7,\n      scrollWheelZoom: true,\n      click: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"Map data \\xA9 <a href=\\\"https://www.openstreetmap.org/\\\">OpenStreetMap</a> contributors, <a href=\\\"https://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA</a>, Imagery \\xA9 <a href=\\\"https://www.mapbox.com/\\\">Mapbox</a>\",\n        url: \"https://api.mapbox.com/styles/v1/beta-sheet/ckh6dba8002u21aob78yl7tep/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiYmV0YS1zaGVldCIsImEiOiJja2g2ZG5hN3QwYzlyMnJxY3hrYmtybHZqIn0.SEa-JVt3EsXaPGgx-4mnYA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: markers.map(marker => {\n          return /*#__PURE__*/_jsxDEV(Circle, {\n            center: {\n              lat: marker.lat,\n              lng: marker.long\n            },\n            fillColor: \"green\",\n            radius: 1000,\n            eventHandlers: {\n              click: () => {\n                // console.log(\"Circle Has been clicked\")\n                console.log(\"Print lines\");\n                console.log(lines);\n                console.log(\"Print construction sites\");\n                console.log(construct);\n                setSite(marker.name);\n                const test = markers.filter(x => x.name === marker.name);\n                setSiteInfo(test[0]);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: construct.map(cnst => {\n          console.log(\"Construction latitude\");\n          console.log(cnst.ops[0].lat);\n          console.log(cnst);\n          return /*#__PURE__*/_jsxDEV(Polyline, {\n            positions: [[cnst.ops[0].lat, cnst.ops[0].long], [cnst.ops[1].lat, cnst.ops[1].long]],\n            color: \"red\",\n            stroke: true,\n            opacity: 0.25,\n            bubblingMouseEvents: false,\n            weight: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: [47.372406, 8.537606],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [\"Welcome to Zurich. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 32\n          }, this), \" Easily customizable.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapLine, {\n        lines: lines,\n        activeLine: activeLine,\n        setActiveLine: setActiveLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), activeLine && /*#__PURE__*/_jsxDEV(MapActiveLine, {\n        activeLine: activeLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        eventHandlers: {\n          click: () => {\n            console.log(\"marker clicked\");\n          }\n        },\n        position: {\n          lat: 46.23636,\n          lng: 6.139854\n        },\n        children: [/*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [test_city.full_name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), test_city.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), test_city.details, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Circle, {\n          eventHandlers: {\n            click: () => {\n              console.log(\"circle clicked\");\n            }\n          },\n          center: {\n            lat: 46.23636,\n            lng: 6.139854\n          },\n          fillColor: \"red\",\n          radius: 1000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, test_city.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/sychevaa/Desktop/Polyhack2020/new_repo_2/SBB_Polyhack/client/src/components/Map/MapboxMap.jsx"],"names":["React","useState","MapContainer","Marker","Polyline","Popup","TileLayer","Circle","startDate","opacityById","weightById","colorById","MapLine","MapActiveLine","act","Map","markers","lines","origin","setSite","setSiteInfo","setActiveLine","activeLine","construct","sample_line","from_lat","from_long","id","to_lat","to_long","test_city","lat","lon","full_name","status","details","handleClick","event","lng","latlng","console","log","map","marker","long","click","name","test","filter","x","cnst","ops"],"mappings":"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","sourcesContent":["//import \"./MapboxMap.css\";\nimport React, { useState } from \"react\";\nimport {\n  MapContainer,\n  Marker,\n  Polyline,\n  Popup,\n  TileLayer,\n  Circle,\n  startDate\n} from \"react-leaflet\";\nimport { opacityById, weightById, colorById } from \"./stylize_elements.js\";\nimport { MapLine, MapActiveLine } from \"./Line\";\nimport { act } from \"react-dom/test-utils\";\n\n\nexport const Map = ({\n  markers,\n  lines,\n  origin,\n  setSite,\n  setSiteInfo,\n  setActiveLine,\n  activeLine,\n  construct,\n}) => {\n  const sample_line = [\n    {\n      from_lat: \"47.372406\",\n      from_long: \"8.537606\",\n      id: \"1\",\n      to_lat: \"46.951368\",\n      to_long: \"7.451401\",\n    },\n    {\n      from_lat: \"47.372406\",\n      from_long: \"8.537606\",\n      id: \"2\",\n      to_lat: \"47.539976\",\n      to_long: \"7.579924\",\n    },\n  ];\n\n  const test_city = {\n    id: \"GE\",\n    lat: \"46.236360\",\n    lon: \"6.139854\",\n    full_name: \"Geneva\",\n    status: \"Lockdown\",\n    details: \"What a pity\",\n  };\n\n  const handleClick = (event) => {\n    const { lat, lng } = event.latlng;\n    console.log(`Clicked at ${lat}, ${lng}`);\n  };\n\n  return (\n    <div>\n      <MapContainer\n        center={origin}\n        zoom={7}\n        scrollWheelZoom={true}\n        click={handleClick}\n      >\n        <TileLayer\n          attribution='Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery &copy; <a href=\"https://www.mapbox.com/\">Mapbox</a>'\n          url=\"https://api.mapbox.com/styles/v1/beta-sheet/ckh6dba8002u21aob78yl7tep/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiYmV0YS1zaGVldCIsImEiOiJja2g2ZG5hN3QwYzlyMnJxY3hrYmtybHZqIn0.SEa-JVt3EsXaPGgx-4mnYA\"\n        />\n\n          <div>\n          {markers.map((marker) => {\n\n            return(\n              <Circle\n                center={{ lat: marker.lat, lng: marker.long }}\n                fillColor=\"green\"\n                radius={1000}\n\n                eventHandlers={{\n                  click: (  ) => {\n                    // console.log(\"Circle Has been clicked\")\n                    console.log(\"Print lines\")\n                    console.log(lines)\n                    console.log(\"Print construction sites\")\n                    console.log(construct)\n                    setSite(marker.name)\n                    const test = markers.filter(x => x.name === marker.name);\n                    setSiteInfo(test[0])\n                  },\n                }}\n                />\n            );\n          })}\n\n        </div>\n\n        <div>\n          {construct.map((cnst) => {\n\n            console.log(\"Construction latitude\");\n            console.log(cnst.ops[0].lat);\n            console.log(cnst)\n\n            return (\n              <Polyline\n                \n                positions={[\n                  [cnst.ops[0].lat, cnst.ops[0].long],\n                  [cnst.ops[1].lat, cnst.ops[1].long],\n                ]}\n                color={\"red\"}\n                stroke={true}\n                opacity={0.25}\n                bubblingMouseEvents={false}\n                weight={10}\n              />\n            );\n\n            \n          })}\n\n        </div>\n\n\n        <Marker position={[47.372406, 8.537606]}>\n          <Popup>\n            Welcome to Zurich. <br /> Easily customizable.\n          </Popup>\n        </Marker>\n\n        {/* TRY out polylines \n        see properties\n        https://leafletjs.com/reference-1.7.1.html#path\n        */}\n\n        <MapLine\n          lines={lines}\n          activeLine={activeLine}\n          setActiveLine={setActiveLine}\n        />\n\n        {activeLine && <MapActiveLine activeLine={activeLine} />}\n\n        {/* Add new type of a marker\n         */}\n\n        <Marker\n          eventHandlers={{\n            click: () => {\n              console.log(\"marker clicked\");\n            },\n          }}\n          key={test_city.id}\n          position={{ lat: 46.23636, lng: 6.139854 }}\n        >\n          <Popup>\n            <span>\n              {test_city.full_name}\n              <br />\n              {test_city.status}\n              <br />\n              {test_city.details}\n              <br />\n            </span>\n          </Popup>\n          <Circle\n            eventHandlers={{\n              click: () => {\n                console.log(\"circle clicked\");\n              },\n            }}\n            center={{ lat: 46.23636, lng: 6.139854 }}\n            fillColor=\"red\"\n            radius={1000}\n          />\n        </Marker>\n      </MapContainer>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}