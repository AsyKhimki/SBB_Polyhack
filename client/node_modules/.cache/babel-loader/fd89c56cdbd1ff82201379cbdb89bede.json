{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sychevaa/Desktop/Polyhack2020/new_repo_2/SBB_Polyhack/client/src/containers/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Map } from '../components/Map/MapboxMap';\nimport { Titlebar } from '../components/Titlebar/Titlebar';\nimport { Infobar } from '../components/Infobar/Infobar';\nimport { Searchbar } from '../components/Searchbar/Searchbar';\nimport { Navbar } from '../components/Navbar/Navbar';\nimport { MyForm } from '../components/Form/Form';\nimport React, { useState } from 'react';\nimport { Container, Row, Col } from 'react-grid-system';\nimport ReactDOM from \"react-dom\"; //import { Leaflet, Icon } from \"leaflet\";\n//import 'leaflet/dist/leaflet.css';\n\nconst App = () => {\n  _s();\n\n  const [origin, setOrigin] = useState([47.372406, 8.537606]);\n  const [markers, setMarkers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [lines, setLines] = useState([]); // for now we're fetching the same data twice - the idea is to fetch markers \n  // from one route and the lines from another\n\n  const fetchLines = async () => {\n    try {\n      const response = await fetch(\"/allops\");\n      const data = await response.json();\n      console.log(\"Fetching lines successful!\");\n      const dataArr = data.map(el => [el.lat, el.long]);\n      console.log(dataArr);\n      setLines(dataArr);\n    } catch (err) {\n      console.log(\"There was a problem with backend connection\");\n      return;\n    }\n  };\n\n  const fetchMarkers = async () => {\n    try {\n      const response = await fetch(\"/allops\");\n      const data = await response.json();\n      console.log(\"Fetching markers successful!\");\n      console.log(data);\n      setMarkers(data);\n    } catch (err) {\n      console.log(\"There was a problem with backend connection\");\n      return;\n    }\n  };\n\n  const fetchData = async () => {\n    setLoading(true); //await fetchMarkers();\n\n    await fetchLines();\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 20,\n            style: {\n              backgroundColor: \"#e62b19\",\n              opacity: 0.5\n            },\n            children: /*#__PURE__*/_jsxDEV(Titlebar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"left-container\",\n            xs: 2.35,\n            style: {\n              backgroundColor: '#2F4989'\n            },\n            children: /*#__PURE__*/_jsxDEV(MyForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"map-container\",\n            xs: 7.9,\n            style: {\n              backgroundColor: \"#e62b19\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n              fetchMarkers: fetchData,\n              style: {\n                color: \"black\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Map, {\n              markers: markers,\n              lines: lines,\n              origin: origin,\n              style: {\n                width: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 2,\n            style: {\n              backgroundColor: '#2F4989'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-container\",\n              style: {\n                backgroundColor: '#2F4989',\n                width: \"18rem\",\n                height: \"400pt\",\n                border: \"none\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Infobar, {\n                num: (1, \"18rem\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Infobar, {\n                num: (2, \"18rem\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Infobar, {\n                num: (3, \"18rem\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Infobar, {\n                num: (4, \"18rem\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Infobar, {\n                num: (5, \"18rem\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Infobar, {\n                num: (6, \"18rem\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"DIJopzQay2Gu+DVY3RlFFe6pQE4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sychevaa/Desktop/Polyhack2020/new_repo_2/SBB_Polyhack/client/src/containers/App.js"],"names":["Map","Titlebar","Infobar","Searchbar","Navbar","MyForm","React","useState","Container","Row","Col","ReactDOM","App","origin","setOrigin","markers","setMarkers","loading","setLoading","lines","setLines","fetchLines","response","fetch","data","json","console","log","dataArr","map","el","lat","long","err","fetchMarkers","fetchData","backgroundColor","opacity","color","width","height","border"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {Map} from '../components/Map/MapboxMap';\nimport {Titlebar} from '../components/Titlebar/Titlebar';\nimport {Infobar} from '../components/Infobar/Infobar';\nimport {Searchbar} from '../components/Searchbar/Searchbar';\nimport {Navbar} from '../components/Navbar/Navbar';\nimport {MyForm} from '../components/Form/Form';\nimport React, { useState } from 'react';\nimport { Container, Row, Col } from 'react-grid-system'\nimport ReactDOM from \"react-dom\";\n//import { Leaflet, Icon } from \"leaflet\";\n//import 'leaflet/dist/leaflet.css';\n\n\nconst App = () => {\n  const [origin, setOrigin] = useState([47.372406, 8.537606 ]);\n  const [markers, setMarkers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [lines, setLines] = useState([]);\n\n// for now we're fetching the same data twice - the idea is to fetch markers \n// from one route and the lines from another\n  const fetchLines = async() => {\n    try {\n      const response = await fetch(\"/allops\");\n      const data = await response.json();\n      console.log(\"Fetching lines successful!\");\n      const dataArr = data.map(el => [el.lat, el.long]);\n      console.log(dataArr);\n      setLines(dataArr);\n    } catch (err) {\n      console.log(\"There was a problem with backend connection\");\n      return;\n    }\n  }\n\n  const fetchMarkers = async() => {\n    try {\n      const response = await fetch(\"/allops\");\n      const data = await response.json();\n      console.log(\"Fetching markers successful!\");\n      console.log(data);\n      setMarkers(data);\n    } catch (err) {\n      console.log(\"There was a problem with backend connection\");\n      return;\n    }\n  }\n\n  const fetchData = async() => {\n    setLoading(true);\n    //await fetchMarkers();\n    await fetchLines();\n    setLoading(false)\n  }\n\n  return ( \n    <div>\n      {loading ? <div>Loading</div> : \n    <div>\n    \n    <Container>\n    <Row>\n    <Col xs={20} style={{backgroundColor:\"#e62b19\", opacity:0.5}}>\n    <Titlebar /> \n    \n    </Col>\n\n   </Row>\n\n    <Row>\n      \n       <Col className=\"left-container\"\n        xs={2.35}\n        style={{backgroundColor:'#2F4989'}}>\n        <MyForm />\n        </Col>\n        <Col className=\"map-container\" xs={7.9} style={{backgroundColor:\"#e62b19\"}}>\n        <Searchbar fetchMarkers={fetchData} style={{color: \"black\"}}/>\n        <Map markers={markers} lines={lines} origin={origin} style={{width: \"100%\"}}/>\n        </Col>\n        <Col xs={2} style={{backgroundColor:'#2F4989'}}>\n          <div className=\"info-container\" style={{backgroundColor:'#2F4989', width: \"18rem\", height:\"400pt\", border:\"none\"}}>\n              <Infobar num={1, \"18rem\"}/>\n              <Infobar num={2, \"18rem\"}/>\n              <Infobar num={3, \"18rem\"}/>\n              <Infobar num={4, \"18rem\"}/>\n              <Infobar num={5, \"18rem\"}/>\n              <Infobar num={6, \"18rem\"}/>\n          </div>\n        </Col>\n     \n      </Row>\n      \n      </Container>\n\n    </div>\n    }\n    </div>\n   );\n}\n \nexport default App;\n"]},"metadata":{},"sourceType":"module"}