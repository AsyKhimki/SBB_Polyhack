{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/beta/Documents/react/polyhack/SBB_Polyhack/client/src/components/Map/MapboxMap.jsx\";\n//import \"./MapboxMap.css\";\nimport React, { useState } from \"react\";\nimport { MapContainer, Marker, Polyline, Popup, TileLayer, Circle } from \"react-leaflet\";\nimport { opacityById, weightById, colorById } from \"./stylize_elements.js\";\n{\n  /*var greenIcon = icon({\n  iconUrl: 'test_icon.png',\n   iconSize:     [38, 95], // size of the icon\n  shadowSize:   [50, 64], // size of the shadow\n  iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location\n  shadowAnchor: [4, 62],  // the same for the shadow\n  popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor\n  });*/\n}\n/*\nconst colorById = (id) => {\n  console.log(\"Line id\");\n  console.log(id);\n  var res = parseInt(id) === 1 ? \"red\" : \"blue\";\n  console.log(res);\n  return res;\n}\n\nvar highlight = {\n  'fillColor': 'yellow',\n  'weight': 2,\n  'opacity': 1\n};\n\nconst  weightById = (id) =>{\n\n  var res = parseInt(id) === 1 ? 2 : 10;\n  console.log(res);\n  return res;\n}\n\nconst opacityById= (id) =>{\n\n  var res = parseInt(id) === 1 ? 0.25 : 1;\n  console.log(res);\n  return res;\n}\n*/\n\nexport const Map = ({\n  markers,\n  lines,\n  origin\n}) => {\n  console.log(lines);\n  const sample_line = [{\n    from_lat: \"47.372406\",\n    from_long: \"8.537606\",\n    id: \"1\",\n    to_lat: \"46.951368\",\n    to_long: \"7.451401\"\n  }, {\n    from_lat: \"47.372406\",\n    from_long: \"8.537606\",\n    id: \"2\",\n    to_lat: \"47.539976\",\n    to_long: \"7.579924\"\n  }];\n  const line2 = [{\n    id: \"1\",\n    from_lat: 47.4352897624,\n    from_long: 8.34964761959,\n    to_lat: 47.4380613536,\n    to_long: 8.33763783781 //opFrom: { lat: 47.4352897624, long: 8.34964761959 },\n    //opTo: { lat: 47.4380613536, long: 8.33763783781 },\n\n  }];\n  const test_city = {\n    id: \"GE\",\n    lat: \"46.236360\",\n    lon: \"6.139854\",\n    full_name: \"Geneva\",\n    status: \"Lockdown\",\n    details: \"What a pity\"\n  };\n\n  const handleClick = event => {\n    const {\n      lat,\n      lng\n    } = event.latlng;\n    console.log(`Clicked at ${lat}, ${lng}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: origin,\n      zoom: 7,\n      scrollWheelZoom: true,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"Map data \\xA9 <a href=\\\"https://www.openstreetmap.org/\\\">OpenStreetMap</a> contributors, <a href=\\\"https://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA</a>, Imagery \\xA9 <a href=\\\"https://www.mapbox.com/\\\">Mapbox</a>\",\n        url: \"https://api.mapbox.com/styles/v1/beta-sheet/ckh6dba8002u21aob78yl7tep/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiYmV0YS1zaGVldCIsImEiOiJja2g2ZG5hN3QwYzlyMnJxY3hrYmtybHZqIn0.SEa-JVt3EsXaPGgx-4mnYA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", markers.map(marker => {\n          console.log(\"printing\");\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: [marker.lat, marker.long],\n            className: \"my_marker\",\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: [\"Operation point \", marker.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 49\n              }, this), \" Tell me more.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this);\n        }), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: [47.372406, 8.537606],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [\"Welcome to Zurich. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 32\n          }, this), \" Easily customizable.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), line2.map(segment => {\n        return /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: [[segment.from_lat, segment.from_long], [segment.to_lat, segment.to_long]],\n          color: colorById(segment.id),\n          stroke: true,\n          opacity: opacityById(segment.id),\n          bubblingMouseEvents: false,\n          weight: weightById(segment.id)\n        }, segment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this);\n      }), sample_line.map(({\n        id,\n        from_lat,\n        from_long,\n        to_lat,\n        to_long\n      }) => {\n        return /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: [[from_lat, from_long], [to_lat, to_long]],\n          color: colorById(id),\n          stroke: true,\n          opacity: opacityById(id),\n          bubblingMouseEvents: false,\n          weight: weightById(id)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: 46.23636,\n          lng: 6.139854\n        },\n        onClick: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [test_city.full_name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), test_city.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), test_city.details, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Circle, {\n          center: {\n            lat: 46.23636,\n            lng: 6.139854\n          },\n          fillColor: \"red\",\n          radius: 1000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, test_city.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/beta/Documents/react/polyhack/SBB_Polyhack/client/src/components/Map/MapboxMap.jsx"],"names":["React","useState","MapContainer","Marker","Polyline","Popup","TileLayer","Circle","opacityById","weightById","colorById","Map","markers","lines","origin","console","log","sample_line","from_lat","from_long","id","to_lat","to_long","line2","test_city","lat","lon","full_name","status","details","handleClick","event","lng","latlng","map","marker","long","name","segment"],"mappings":"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","sourcesContent":["//import \"./MapboxMap.css\";\nimport React, { useState } from \"react\";\nimport {\n  MapContainer,\n  Marker,\n  Polyline,\n  Popup,\n  TileLayer,\n  Circle,\n} from \"react-leaflet\";\nimport { opacityById, weightById, colorById } from \"./stylize_elements.js\";\n\n{\n  /*var greenIcon = icon({\n  iconUrl: 'test_icon.png',\n\n  iconSize:     [38, 95], // size of the icon\n  shadowSize:   [50, 64], // size of the shadow\n  iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location\n  shadowAnchor: [4, 62],  // the same for the shadow\n  popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor\n});*/\n}\n\n/*\nconst colorById = (id) => {\n  console.log(\"Line id\");\n  console.log(id);\n  var res = parseInt(id) === 1 ? \"red\" : \"blue\";\n  console.log(res);\n  return res;\n}\n\nvar highlight = {\n  'fillColor': 'yellow',\n  'weight': 2,\n  'opacity': 1\n};\n\nconst  weightById = (id) =>{\n\n  var res = parseInt(id) === 1 ? 2 : 10;\n  console.log(res);\n  return res;\n}\n\nconst opacityById= (id) =>{\n\n  var res = parseInt(id) === 1 ? 0.25 : 1;\n  console.log(res);\n  return res;\n}\n*/\n\nexport const Map = ({ markers, lines, origin }) => {\n  console.log(lines);\n  const sample_line = [\n    {\n      from_lat: \"47.372406\",\n      from_long: \"8.537606\",\n      id: \"1\",\n      to_lat: \"46.951368\",\n      to_long: \"7.451401\",\n    },\n    {\n      from_lat: \"47.372406\",\n      from_long: \"8.537606\",\n      id: \"2\",\n      to_lat: \"47.539976\",\n      to_long: \"7.579924\",\n    },\n  ];\n\n  const line2 = [\n    {\n      id: \"1\",\n      from_lat: 47.4352897624,\n      from_long: 8.34964761959,\n      to_lat: 47.4380613536,\n      to_long: 8.33763783781,\n      //opFrom: { lat: 47.4352897624, long: 8.34964761959 },\n      //opTo: { lat: 47.4380613536, long: 8.33763783781 },\n    },\n  ];\n\n  const test_city = {\n    id: \"GE\",\n    lat: \"46.236360\",\n    lon: \"6.139854\",\n    full_name: \"Geneva\",\n    status: \"Lockdown\",\n    details: \"What a pity\",\n  };\n\n  const handleClick = (event) => {\n    const { lat, lng } = event.latlng;\n    console.log(`Clicked at ${lat}, ${lng}`);\n  };\n\n  return (\n    <div>\n      <MapContainer center={origin} zoom={7} scrollWheelZoom={true}>\n        <TileLayer\n          attribution='Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery &copy; <a href=\"https://www.mapbox.com/\">Mapbox</a>'\n          url=\"https://api.mapbox.com/styles/v1/beta-sheet/ckh6dba8002u21aob78yl7tep/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiYmV0YS1zaGVldCIsImEiOiJja2g2ZG5hN3QwYzlyMnJxY3hrYmtybHZqIn0.SEa-JVt3EsXaPGgx-4mnYA\"\n        />\n\n        <div>\n          {\" \"}\n          {markers.map((marker) => {\n            console.log(\"printing\");\n            return (\n              <Marker\n                position={[marker.lat, marker.long]}\n                className=\"my_marker\"\n              >\n                <Popup>\n                  Operation point {marker.name} <br /> Tell me more.\n                </Popup>\n              </Marker>\n            );\n          })}{\" \"}\n        </div>\n\n        <Marker position={[47.372406, 8.537606]}>\n          <Popup>\n            Welcome to Zurich. <br /> Easily customizable.\n          </Popup>\n        </Marker>\n\n        {/* TRY out polylines \n        see properties\n        https://leafletjs.com/reference-1.7.1.html#path\n        */}\n\n        {line2.map((segment) => {\n          return (\n            <Polyline\n              key={segment.id}\n              positions={[\n                [segment.from_lat, segment.from_long],\n                [segment.to_lat, segment.to_long],\n              ]}\n              color={colorById(segment.id)}\n              stroke={true}\n              opacity={opacityById(segment.id)}\n              bubblingMouseEvents={false}\n              weight={weightById(segment.id)}\n            />\n          );\n        })}\n\n        {sample_line.map(({ id, from_lat, from_long, to_lat, to_long }) => {\n          return (\n            <Polyline\n              key={id}\n              positions={[\n                [from_lat, from_long],\n                [to_lat, to_long],\n              ]}\n              color={colorById(id)}\n              stroke={true}\n              opacity={opacityById(id)}\n              bubblingMouseEvents={false}\n              weight={weightById(id)}\n            />\n          );\n        })}\n\n        {/* Add new type of a marker\n         */}\n\n        <Marker\n          key={test_city.id}\n          position={{ lat: 46.23636, lng: 6.139854 }}\n          onClick={handleClick}\n        >\n          <Popup>\n            <span>\n              {test_city.full_name}\n              <br />\n              {test_city.status}\n              <br />\n              {test_city.details}\n              <br />\n\n              {/*\n                    {elem.vehicles_launched.map((elem, i) => {\n                      return ( <p key={i}>{elem}</p>)\n                    })} */}\n            </span>\n          </Popup>\n          <Circle\n            center={{ lat: 46.23636, lng: 6.139854 }}\n            fillColor=\"red\"\n            radius={1000}\n          />\n        </Marker>\n      </MapContainer>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}