{"ast":null,"code":"import _objectWithoutProperties from \"/home/beta/Documents/react/bottleneck/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/home/beta/Documents/react/bottleneck/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { CONTEXT_VERSION, LeafletProvider } from '@react-leaflet/core';\nimport { Map as LeafletMap } from 'leaflet';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nexport function useMapElement(mapRef, props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      map = _useState2[0],\n      setMap = _useState2[1];\n\n  useEffect(function () {\n    if (mapRef.current !== null && map === null) {\n      var instance = new LeafletMap(mapRef.current, props);\n\n      if (props.center != null && props.zoom != null) {\n        instance.setView(props.center, props.zoom);\n      } else if (props.bounds != null) {\n        instance.fitBounds(props.bounds, props.boundsOptions);\n      }\n\n      if (props.whenReady != null) {\n        instance.whenReady(props.whenReady);\n      }\n\n      setMap(instance);\n    }\n  }, [mapRef, map, props]);\n  return map;\n}\nexport function MapContainer(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      id = _ref.id,\n      placeholder = _ref.placeholder,\n      style = _ref.style,\n      whenCreated = _ref.whenCreated,\n      options = _objectWithoutProperties(_ref, [\"children\", \"className\", \"id\", \"placeholder\", \"style\", \"whenCreated\"]);\n\n  var mapRef = useRef(null);\n  var map = useMapElement(mapRef, options);\n  var createdRef = useRef(false);\n  useEffect(function () {\n    if (map != null && createdRef.current === false && whenCreated != null) {\n      createdRef.current = true;\n      whenCreated(map);\n    }\n  }, [map, whenCreated]);\n  var context = useMemo(function () {\n    return map ? {\n      __version: CONTEXT_VERSION,\n      map: map\n    } : null;\n  }, [map]);\n  var contents = context ? /*#__PURE__*/React.createElement(LeafletProvider, {\n    value: context\n  }, children) : placeholder != null ? placeholder : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapRef,\n    className: className,\n    id: id,\n    style: style\n  }, contents);\n}","map":{"version":3,"sources":["/home/beta/Documents/react/bottleneck/node_modules/react-leaflet/esm/MapContainer.js"],"names":["CONTEXT_VERSION","LeafletProvider","Map","LeafletMap","React","useEffect","useMemo","useRef","useState","useMapElement","mapRef","props","map","setMap","current","instance","center","zoom","setView","bounds","fitBounds","boundsOptions","whenReady","MapContainer","children","className","id","placeholder","style","whenCreated","options","createdRef","context","__version","contents","createElement","value","ref"],"mappings":"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","sourcesContent":["import { CONTEXT_VERSION, LeafletProvider } from '@react-leaflet/core';\nimport { Map as LeafletMap } from 'leaflet';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nexport function useMapElement(mapRef, props) {\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    if (mapRef.current !== null && map === null) {\n      const instance = new LeafletMap(mapRef.current, props);\n\n      if (props.center != null && props.zoom != null) {\n        instance.setView(props.center, props.zoom);\n      } else if (props.bounds != null) {\n        instance.fitBounds(props.bounds, props.boundsOptions);\n      }\n\n      if (props.whenReady != null) {\n        instance.whenReady(props.whenReady);\n      }\n\n      setMap(instance);\n    }\n  }, [mapRef, map, props]);\n  return map;\n}\nexport function MapContainer({\n  children,\n  className,\n  id,\n  placeholder,\n  style,\n  whenCreated,\n  ...options\n}) {\n  const mapRef = useRef(null);\n  const map = useMapElement(mapRef, options);\n  const createdRef = useRef(false);\n  useEffect(() => {\n    if (map != null && createdRef.current === false && whenCreated != null) {\n      createdRef.current = true;\n      whenCreated(map);\n    }\n  }, [map, whenCreated]);\n  const context = useMemo(() => map ? {\n    __version: CONTEXT_VERSION,\n    map\n  } : null, [map]);\n  const contents = context ? /*#__PURE__*/React.createElement(LeafletProvider, {\n    value: context\n  }, children) : placeholder != null ? placeholder : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapRef,\n    className: className,\n    id: id,\n    style: style\n  }, contents);\n}"]},"metadata":{},"sourceType":"module"}